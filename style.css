@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Montserrat";
    display: flex;
    /* padding: 15px; */
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    background: #5145BA;
}

:where(.configContainer, .quizContainer, .resultContainer) {
    display: none;
    background: #fff;
    border-radius: 12px;
    box-shadow: 0 12px 32px rgba(0, 0, 0, 0.1);
}

.configContainer {
    display: block;
    width: 420px;
    padding: 30px 25px;
    text-align: center;
    background: #fff;
    border-radius: 12px;
    box-shadow: 0 12px 32px rgba(0, 0, 0, 0.1);
}



.configContainer .configTitle {
    font-size: 1.31rem;
}

.configContainer .configOption {
    /* background: red; */
    margin-top: 25px;
}

.configOption .optionTitle {
    font-size: 1.125rem;
    font-weight: 500;
    margin-bottom: 20px;
}

.configOption .categoryOptions {
    display: grid;
    gap: 15px;
    grid-template-columns: repeat(2, 1fr);
}

.configOption .questionsOptions {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
    padding: 0 30px;
    justify-content: center;
}

.configOption button {
    padding: 12px;
    font-size: 0.938rem;
    font-weight: 500;
    background: #fff;
    border-radius: 6px;
    border: 1px solid #9B8FFF;
    transition: all 0.3 ease;
}

.questionsOptions button {
    flex: 1 1 10%;
}

.configOption button:hover,
.quizContent .answerOption:hover {
    background: #dad5fd;
}

.configOption button.active {
    color: #5145BA;
    border-color: #5145BA;
    background: #dfdafd;
}

.configContainer .startQuizBtn {
    margin-top: 30px;

}

.configContainer .startQuizBtn,
.quizFooter .nextQuestionBtn,
.resultContainer .tryAgainBtn {
    color: #ffffff;
    border: none;
    cursor: pointer;
    font-weight: 500;
    background: #5145BA;
    padding: 13px 25px;
    border-radius: 6px;
    font-size: 1rem;
    transition: background 0.3 ease;
}

.configContainer .startQuizBtn:hover,
.resultContainer .tryAgainBtn:hover,
.quizFooter .nextQuestionBtn:hover {
    background: #403795;
}

.quizContainer {
    /* display: block; */
    width: 485px;
}

.quizContainer .quizHeader {
    display: flex;
    align-items: center;
    padding: 15px 25px;
    justify-content: space-between;
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
}

.quizHeader .quizTitle {
    font-size: 1.45rem;
    font-weight: 700;
}

.quizHeader .quizTimer {
    display: flex;
    width: 70px;
    padding: 7px 9px;
    border-radius: 6px;
    background: #32313C;
    color: #fff;
    font-weight: 600;
    /* justify-content: center; */
    align-items: center;
    gap: 5px;
    transition: all 0.3 ease;
}

.quizHeader .quizTimer span {
    font-size: 1.4rem;
}

.quizContainer .quizContent {
    padding: 20px 25px 25px;
    /* background: red; */
}

.quizContent .answerOptions {
    list-style: none;
    margin-top: 20px;
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.quizContent .answerOption {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 13px 16px;
    background: #F3F1FF;
    border-radius: 6px;
    border: 1px solid #B5ACFF;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s ease;
}

.quizContent .answerOption span {
    /* background: #000; */
    display: block;
    flex-shrink: 0;
    margin: -4px -3px -4px 12px;
}

.quizContent .answerOption.correct {
    background: #D4EDDA;
    color: #155724;
    border-color: #B7E1C1;
}

.quizContent .answerOption.incorrect {
    background: #F8D7DA;
    color: #721C24;
    border-color: #F4BEC3;
}

.quizContent .quizQuestion {
    font-size: 1.5rem;
    font-weight: 600;
}

.quizContainer .quizFooter {
    /* background: red; */
    padding: 15px 25px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-top: 1px solid #c6c6c6;
}

.quizFooter .nextQuestionBtn {
    display: inline-flex;
    visibility: hidden;
    align-items: center;
    gap: 5px;
    padding: 9px 17px;
}

.resultContainer {
    /* display: block; */
    text-align: center;
    padding: 40px;
    width: 420px;
}

.resultContainer .result-img {
    width: 110px;
    margin-left: 30px;
}

.resultContainer .resultTitle {
    margin-top: 25px;
}

.resultContainer .resultMessage {
    font-size: 1.125rem;
    font-weight: 500;
    margin-top: 15px;
}

.resultContainer .tryAgainBtn {
    margin-top: 30px;
    padding: 12px 20px;
}

@media (max-width: 500px) {

    /* Stretch containers to full width with some margin */
    .configContainer,
    .quizContainer,
    .resultContainer {
        width: 100%;
        max-width: 100%;
        margin: 0 15px;
        border-radius: 10px;
        padding-left: 15px;
        padding-right: 15px;
    }

    /* Ensure quiz header also spans full width but keeps internal padding */
    .quizContainer .quizHeader {
        margin-left: -15px;
        margin-right: -15px;
        padding-left: 15px;
        padding-right: 15px;
    }

    /* Make text sizes responsive */
    .configContainer .configTitle,
    .quizHeader .quizTitle,
    .quizContent .quizQuestion,
    .resultContainer .resultTitle {
        font-size: 1.3rem;
    }

    .resultContainer .resultMessage,
    .configOption .optionTitle {
        font-size: 1.1rem;
    }

    /* Optionally, reduce button paddings slightly if needed */
    .configContainer .startQuizBtn,
    .quizFooter .nextQuestionBtn,
    .resultContainer .tryAgainBtn {
        padding: 10px 18px;
        font-size: 0.95rem;
    }

    /* Reduce padding inside quiz content for smaller screens */
    .quizContainer .quizContent {
        padding: 15px;
    }

    .quizContainer .quizFooter {
        padding: 15px;
    }
}


:where(.configContainer, .quizContainer, .resultContainer) {
    animation: fadeIn 0.4s ease-in-out;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}
